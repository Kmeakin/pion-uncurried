enum Pair(A: Type, B: Type): Type {
    MkPair(x: A, y: B): Pair(A, B),
}

let fst: fn(A: Type, B: Type, p: Pair(A, B)) -> A = fn(A: Type, B: Type, p: Pair(A, B)) => match p {
    MkPair(x, _) => x,
};

let snd: fn(A: Type, B: Type, p: Pair(A, B)) -> B = fn(A: Type, B: Type, p: Pair(A, B)) => match p {
    MkPair(_, y) => y,
};
